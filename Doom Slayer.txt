-- gObl00x Notification
game:GetService("StarterGui"):SetCore("SendNotification", { 
	Title = "gOb scripts";
	Text = "This Convert Is by gOb..";
	Icon = "rbxthumb://type=Asset&id=126389658690593&w=150&h=150"})
Duration = 15;
----------------------------------------------------------------
-- This edit/convert is by gObl00x ( random_hacke6 *RobloxUser* )--------------------
-- Credits to whoever the hell made the original Script ---------

script=game:GetObjects("rbxassetid://8376003464")[1].Mimicry.ServerScript
--//====================================================\\--
--||                       BASIS
--\\====================================================//--
local MODULE = script.Parent
local PLAYER = game.Players.LocalPlayer
local CHARACTER = PLAYER.Character
local HUM = CHARACTER.Humanoid

local ROOT = HUM.Torso
local HEAD = CHARACTER.Head
local TORSO = CHARACTER.Torso
local RIGHTARM = CHARACTER["Right Arm"]
local LEFTARM = CHARACTER["Left Arm"]
local RIGHTLEG = CHARACTER["Right Leg"]
local LEFTLEG = CHARACTER["Left Leg"]
local ROOTJOINT = ROOT["RootJoint"]
local NECK = TORSO["Neck"]
local RIGHTSHOULDER = TORSO["Right Shoulder"]
local LEFTSHOULDER = TORSO["Left Shoulder"]
local RIGHTHIP = TORSO["Right Hip"]
local LEFTHIP = TORSO["Left Hip"]
local MOUSEPOS = ROOT.Position
local UserInputService = game:GetService("UserInputService")

IT = Instance.new
CF = CFrame.new
VT = Vector3.new
RAD = math.rad
C3 = Color3.new
UD2 = UDim2.new
BRICKC = BrickColor.new
ANGLES = CFrame.Angles
EULER = CFrame.fromEulerAnglesXYZ
COS = math.cos
ACOS = math.acos
SIN = math.sin
ASIN = math.asin
ABS = math.abs
MRANDOM = math.random
FLOOR = math.floor

--//====================================================\\--
--||                  FE CODE (VERY SIGMA :>)
--\\====================================================//--

--cheeseburger(sigma)
--//====================================================\\--
--||                  BACKGROUND VALUES
--\\====================================================//--

local ANIM_SPEED = 3
local MOUSE = PLAYER:GetMouse()
local FRAME_SPEED = 1 / 60 -- (1 / 30) OR (1 / 60)
local CHANGE = 2 / ANIM_SPEED
local DAMAGEMULTIPLIER = 1
local ANIM = "Idle"
local KEYHOLD = false
local MOUSEHOLD = false
local SINE = 0
local ATTACKING = false
local Debris = game:GetService("Debris")
local Effects = IT("Folder",CHARACTER)
Effects.Name = "FXFolder"
local ROOTC0 = CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180))
local NECKC0 = CF(0, 1, 0) * ANGLES(RAD(-90), RAD(0), RAD(180))
local RIGHTSHOULDERC0 = CF(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))
local LEFTSHOULDERC0 = CF(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))

--//====================================================\\--
--||                     HEARTBEAT
--\\====================================================//--

ArtificialHB = Instance.new("BindableEvent", script)
ArtificialHB.Name = "ArtificialHB"

script:WaitForChild("ArtificialHB")

frame = FRAME_SPEED
tf = 0
allowframeloss = false
tossremainder = false
lastframe = tick()
script.ArtificialHB:Fire()

game:GetService("RunService").Heartbeat:connect(function(s, p)
	tf = tf + s
	if tf >= frame then
		if allowframeloss then
			ArtificialHB:Fire()
			lastframe = tick()
		else
			for i = 1, math.floor(tf / frame) do
				ArtificialHB:Fire()
			end
			lastframe = tick()
		end
		if tossremainder then
			tf = 0
		else
			tf = tf - frame * math.floor(tf / frame)
		end
	end
end)

function PositiveAngle(NUMBER)
	if NUMBER >= 0 then
		NUMBER = 0
	end
	return NUMBER
end

function NegativeAngle(NUMBER)
	if NUMBER <= 0 then
		NUMBER = 0
	end
	return NUMBER
end

function Swait(NUMBER)
	if NUMBER == 0 or NUMBER == nil then
		ArtificialHB.Event:wait()
	else
		for i = 1, NUMBER do
			ArtificialHB.Event:wait()
		end
	end
end

--//====================================================\\--
--||                       CLERP
--\\====================================================//--

function QuaternionFromCFrame(cf)
	local mx, my, mz, m00, m01, m02, m10, m11, m12, m20, m21, m22 = cf:components()
	local trace = m00 + m11 + m22
	if trace > 0 then 
		local s = math.sqrt(1 + trace)
		local recip = 0.5 / s
		return (m21 - m12) * recip, (m02 - m20) * recip, (m10 - m01) * recip, s * 0.5
	else
		local i = 0
		if m11 > m00 then
			i = 1
		end
		if m22 > (i == 0 and m00 or m11) then
			i = 2
		end
		if i == 0 then
			local s = math.sqrt(m00 - m11 - m22 + 1)
			local recip = 0.5 / s
			return 0.5 * s, (m10 + m01) * recip, (m20 + m02) * recip, (m21 - m12) * recip
		elseif i == 1 then
			local s = math.sqrt(m11 - m22 - m00 + 1)
			local recip = 0.5 / s
			return (m01 + m10) * recip, 0.5 * s, (m21 + m12) * recip, (m02 - m20) * recip
		elseif i == 2 then
			local s = math.sqrt(m22 - m00 - m11 + 1)
			local recip = 0.5 / s return (m02 + m20) * recip, (m12 + m21) * recip, 0.5 * s, (m10 - m01) * recip
		end
	end
end
 
function QuaternionToCFrame(px, py, pz, x, y, z, w)
	local xs, ys, zs = x + x, y + y, z + z
	local wx, wy, wz = w * xs, w * ys, w * zs
	local xx = x * xs
	local xy = x * ys
	local xz = x * zs
	local yy = y * ys
	local yz = y * zs
	local zz = z * zs
	return CFrame.new(px, py, pz, 1 - (yy + zz), xy - wz, xz + wy, xy + wz, 1 - (xx + zz), yz - wx, xz - wy, yz + wx, 1 - (xx + yy))
end
 
function QuaternionSlerp(a, b, t)
	local cosTheta = a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]
	local startInterp, finishInterp;
	if cosTheta >= 0.0001 then
		if (1 - cosTheta) > 0.0001 then
			local theta = ACOS(cosTheta)
			local invSinTheta = 1 / SIN(theta)
			startInterp = SIN((1 - t) * theta) * invSinTheta
			finishInterp = SIN(t * theta) * invSinTheta
		else
			startInterp = 1 - t
			finishInterp = t
		end
	else
		if (1 + cosTheta) > 0.0001 then
			local theta = ACOS(-cosTheta)
			local invSinTheta = 1 / SIN(theta)
			startInterp = SIN((t - 1) * theta) * invSinTheta
			finishInterp = SIN(t * theta) * invSinTheta
		else
			startInterp = t - 1
			finishInterp = t
		end
	end
	return a[1] * startInterp + b[1] * finishInterp, a[2] * startInterp + b[2] * finishInterp, a[3] * startInterp + b[3] * finishInterp, a[4] * startInterp + b[4] * finishInterp
end

function Clerp(a, b, t)
	local qa = {QuaternionFromCFrame(a)}
	local qb = {QuaternionFromCFrame(b)}
	local ax, ay, az = a.x, a.y, a.z
	local bx, by, bz = b.x, b.y, b.z
	local _t = 1 - t
	return QuaternionToCFrame(_t * ax + t * bx, _t * ay + t * by, _t * az + t * bz, QuaternionSlerp(qa, qb, t))
end

--//====================================================\\--
--||                     FUNCTIONS
--\\====================================================//--

function WeldParts(A,B)
	local WLD = IT("ManualWeld")
	WLD.Part0 = A
	WLD.Part1 = B
	WLD.C1 = B.CFrame:inverse() * A.CFrame
	WLD.Parent = A
	return WLD
end

--NewSound({ID = 0,PARENT = ROOT,VOLUME = 0.5,PITCH = 1,LOOP = false,MAXDISTANCE = 1000,EMITTERSIZE = 10,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
function NewSound(TABLE)
	local ID = "rbxassetid://"..(TABLE.ID or 0)
	local PARENT = (TABLE.PARENT or ROOT)
	local VOLUME = (TABLE.VOLUME or 0.5)
	local PITCH = (TABLE.PITCH or 1)
	local LOOP = (TABLE.LOOP or false)
	local MAXDISTANCE = (TABLE.MAXDISTANCE or 100)
	local EMITTERSIZE = (TABLE.EMITTERSIZE or 10)
	local PLAYING = (TABLE.PLAYING or true)
	local PLAYONREMOVE = (TABLE.PLAYONREMOVE or false)
	local DOESDEBRIS = (TABLE.DOESDEBRIS or true)
	if ID ~= "rbxassetid://0" then
		local SOUND = IT("Sound",PARENT)
		SOUND.SoundId = ID
		SOUND.Volume = VOLUME
		SOUND.Pitch = PITCH
		SOUND.Looped = LOOP
		SOUND.MaxDistance = MAXDISTANCE
		SOUND.EmitterSize = EMITTERSIZE
		SOUND.PlayOnRemove = PLAYONREMOVE
		if DOESDEBRIS == true and PLAYING == true and LOOP == false then
			Debris:AddItem(SOUND,SOUND.TimeLength+5)
		end
		if PLAYING == true then
			SOUND:Play()
		end
		return SOUND
	end
end

function OofOuchBlood(LOCATION,TO,AMOUNT)
	local P = CreatePart(3, Effects, "Granite", 0, 1, BRICKC("Really red"), "Blood", VT(0,0,0), true)
	P.CFrame = CF(LOCATION,TO)
	local BLOOD = MODULE.Blood:Clone()
	BLOOD.Parent = P
	BLOOD:Emit(AMOUNT)
	Debris:AddItem(P,2)
end

function AttachmentCFrame(A)
	return A.Parent.CFrame*CF(A.Position)
end

function CastProperRay(StartPos, EndPos, Distance, Ignore)
	local DIRECTION = CF(StartPos,EndPos).lookVector
	return Raycast(StartPos, DIRECTION, Distance, Ignore)
end

function ManSlaughter(MAN)
	if MAN then
		local ROOT = MAN:FindFirstChild("HumanoidRootPart")
		if ROOT then
			ROOT:Remove()
		end
		local MANHUM = MAN:FindFirstChildOfClass("Humanoid")
		if MANHUM then
			MANHUM.BreakJointsOnDeath = false
			MANHUM.Health = 0
		end
		if MAN:FindFirstChild("R6Ragdoll") == nil and MAN:FindFirstChild("R15Ragdoll") == nil then
			if MAN:FindFirstChild("UpperTorso") then
				local SCRIPT = script.R15Ragdoll:Clone()
				SCRIPT.Parent = MAN
				SCRIPT.Disabled = false
			else
				local SCRIPT = script.R6Ragdoll:Clone()
				SCRIPT.Parent = MAN
				SCRIPT.Disabled = false
			end
			local TORSO = MAN:FindFirstChild("Torso") or MAN:FindFirstChild("UpperTorso")
			if TORSO then
				NewSound({ID = 146594648,PARENT = TORSO,VOLUME = 1,PITCH = MRANDOM(8,12)/10,LOOP = false,MAXDISTANCE = 75,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
			end
		end
		MAN:BreakJoints()
		if MAN:FindFirstChild("Slaughtered") == nil then
			local MARK = IT("Folder",MAN)
			MARK.Name = "Slaughtered"
		else
			if MAN:FindFirstChild("Slaughtered") then
				local TORSO = MAN:FindFirstChild("Torso") or MAN:FindFirstChild("UpperTorso")
				if TORSO then
					TORSO.RotVelocity = VT(0,MRANDOM(-25,25),0)
				end
			end
		end
	end
end

function ApplyDamageTo(HUM,DAMAGE)
	if HUM.Health >= 0 then
		HUM.Health = HUM.Health - DAMAGE
		if HUM.Health <= 0 then
			ManSlaughter(HUM.Parent)
		end
	end
end

function AreaOfEffect(AREA,RANGE,MIN,MAX,RETURN)
	local HIT = {}
	for index, CHILD in pairs(workspace:GetChildren()) do
		if CHILD:FindFirstChildOfClass("Humanoid") and CHILD ~= CHARACTER then
			local HUMAN = CHILD:FindFirstChildOfClass("Humanoid")
			local ROOT = HUMAN.Torso
			if ROOT then
				if (ROOT.Position - AREA).Magnitude <= RANGE then
					if RETURN == true then
						table.insert(HIT,{CHILD,HUMAN,ROOT})
					else
						ApplyDamageTo(HUMAN,MRANDOM(MIN,MAX))
					end
				end
			end
		end
	end
	if RETURN == true then
		return HIT
	end
end

function ConnectDamage(PART,MIN,MAX)
	local HITS = {}
	local TOUCH = PART.Touched:Connect(function(HITP)
		if HITP.Parent then
			if HITP.Parent:FindFirstChildOfClass("Humanoid") then
				local HUMAN = HITP.Parent:FindFirstChildOfClass("Humanoid")
				local PASS = true
				for E = 1, #HITS do
					if HITS[E] == HUMAN then
						PASS = false
						break
					end
				end
				if PASS == true and HUM ~= HUMAN then
					ApplyDamageTo(HUMAN,MRANDOM(MIN,MAX))
					table.insert(HITS,HUMAN)
				end
			end
		end
	end)
	return TOUCH
end

function CreateMesh(MESH, PARENT, MESHTYPE, MESHID, TEXTUREID, SCALE, OFFSET)
	local NEWMESH = IT(MESH)
	if MESH == "SpecialMesh" then
		NEWMESH.MeshType = MESHTYPE
		if MESHID ~= "nil" and MESHID ~= "" then
			NEWMESH.MeshId = "http://www.roblox.com/asset/?id="..MESHID
		end
		if TEXTUREID ~= "nil" and TEXTUREID ~= "" then
			NEWMESH.TextureId = "http://www.roblox.com/asset/?id="..TEXTUREID
		end
	end
	NEWMESH.Offset = OFFSET or VT(0, 0, 0)
	NEWMESH.Scale = SCALE
	NEWMESH.Parent = PARENT
	return NEWMESH
end

function CreatePart(FORMFACTOR, PARENT, MATERIAL, REFLECTANCE, TRANSPARENCY, BRICKCOLOR, NAME, SIZE, ANCHOR)
	local NEWPART = IT("Part")
	NEWPART.formFactor = FORMFACTOR
	NEWPART.Reflectance = REFLECTANCE
	NEWPART.Transparency = TRANSPARENCY
	NEWPART.CanCollide = false
	NEWPART.Locked = true
	NEWPART.Anchored = true
	if ANCHOR == false then
		NEWPART.Anchored = false
	end
	NEWPART.BrickColor = BRICKC(tostring(BRICKCOLOR))
	NEWPART.Name = NAME
	NEWPART.Size = SIZE
	NEWPART.Position = ROOT.Position
	NEWPART.Material = MATERIAL
	NEWPART:BreakJoints()
	NEWPART.Parent = PARENT
	return NEWPART
end

function Raycast(POSITION, DIRECTION, RANGE, IGNOREDECENDANTS)
	return workspace:FindPartOnRay(Ray.new(POSITION, DIRECTION.unit * RANGE), IGNOREDECENDANTS)
end

--WACKYEFFECT({EffectType = "", Size = VT(1,1,1), Size2 = VT(0,0,0), Transparency = 0, Transparency2 = 1, CFrame = CF(), MoveToPos = nil, RotationX = 0, RotationY = 0, RotationZ = 0, Material = "Neon", Color = C3(1,1,1), SoundID = nil, SoundPitch = nil, SoundVolume = nil, UseBoomerangMath = false, Boomerang = 0, SizeBoomerang = 0})
function WACKYEFFECT(Table)
	local TYPE = (Table.EffectType or "Sphere")
	local SIZE = (Table.Size or VT(1,1,1))
	local ENDSIZE = (Table.Size2 or VT(0,0,0))
	local TRANSPARENCY = (Table.Transparency or 0)
	local ENDTRANSPARENCY = (Table.Transparency2 or 1)
	local CFRAME = (Table.CFrame or ROOT.CFrame)
	local MOVEDIRECTION = (Table.MoveToPos or nil)
	local ROTATION1 = (Table.RotationX or 0)
	local ROTATION2 = (Table.RotationY or 0)
	local ROTATION3 = (Table.RotationZ or 0)
	local MATERIAL = (Table.Material or "Neon")
	local COLOR = (Table.Color or C3(1,1,1))
	local TIME = (Table.Time or 45)
	local SOUNDID = (Table.SoundID or nil)
	local SOUNDPITCH = (Table.SoundPitch or nil)
	local SOUNDVOLUME = (Table.SoundVolume or nil)
	local USEBOOMERANGMATH = (Table.UseBoomerangMath or false)
	local BOOMERANG = (Table.Boomerang or 0)
	local SIZEBOOMERANG = (Table.SizeBoomerang or 0)
	coroutine.resume(coroutine.create(function()
		local PLAYSSOUND = false
		local SOUND = nil
		local EFFECT = CreatePart(3, Effects, MATERIAL, 0, TRANSPARENCY, BRICKC("Really black"), "Effect", VT(1,1,1), true)
		if SOUNDID ~= nil and SOUNDPITCH ~= nil and SOUNDVOLUME ~= nil then
			PLAYSSOUND = true
			SOUND = NewSound({ID = SOUNDID,PARENT = EFFECT,VOLUME = SOUNDVOLUME,PITCH = SOUNDPITCH,LOOP = false,MAXDISTANCE = 200,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
		end
		EFFECT.Color = COLOR
		local MSH = nil
		if TYPE == "Sphere" then
			MSH = CreateMesh("SpecialMesh", EFFECT, "Sphere", "", "", SIZE, VT(0,0,0))
		elseif TYPE == "Block" or TYPE == "Box" then
			MSH = IT("BlockMesh",EFFECT)
			MSH.Scale = SIZE
		elseif TYPE == "Wave" then
			MSH = CreateMesh("SpecialMesh", EFFECT, "FileMesh", "20329976", "", SIZE, VT(0,0,-SIZE.X/8))
		elseif TYPE == "Ring" then
			MSH = CreateMesh("SpecialMesh", EFFECT, "FileMesh", "559831844", "", SIZE, VT(0,0,0))
		elseif TYPE == "Slash" then
			MSH = CreateMesh("SpecialMesh", EFFECT, "FileMesh", "662586858", "", SIZE, VT(0,0,0))
		elseif TYPE == "Round Slash" then
			MSH = CreateMesh("SpecialMesh", EFFECT, "FileMesh", "662585058", "", SIZE, VT(0,0,0))
		elseif TYPE == "Swirl" then
			MSH = CreateMesh("SpecialMesh", EFFECT, "FileMesh", "168892432", "", SIZE, VT(0,0,0))
		elseif TYPE == "Skull" then
			MSH = CreateMesh("SpecialMesh", EFFECT, "FileMesh", "4770583", "", SIZE, VT(0,0,0))
		elseif TYPE == "Crystal" then
			MSH = CreateMesh("SpecialMesh", EFFECT, "FileMesh", "9756362", "", SIZE, VT(0,0,0))
		end
		if MSH ~= nil then
			local BOOMR1 = 1+BOOMERANG/50
			local BOOMR2 = 1+SIZEBOOMERANG/50
			local MOVESPEED = nil
			if MOVEDIRECTION ~= nil then
				if USEBOOMERANGMATH == true then
					MOVESPEED = ((CFRAME.p - MOVEDIRECTION).Magnitude/TIME)*BOOMR1
				else
					MOVESPEED = ((CFRAME.p - MOVEDIRECTION).Magnitude/TIME)
				end
			end
			local GROWTH = nil
			if USEBOOMERANGMATH == true then
				GROWTH = (SIZE - ENDSIZE)*(BOOMR2+1)
			else
				GROWTH = (SIZE - ENDSIZE)
			end
			local TRANS = TRANSPARENCY - ENDTRANSPARENCY
			if TYPE == "Block" then
				EFFECT.CFrame = CFRAME*ANGLES(RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)))
			else
				EFFECT.CFrame = CFRAME
			end
			if USEBOOMERANGMATH == true then
				for LOOP = 1, TIME+1 do
					Swait()
					MSH.Scale = MSH.Scale - (VT((GROWTH.X)*((1 - (LOOP/TIME)*BOOMR2)),(GROWTH.Y)*((1 - (LOOP/TIME)*BOOMR2)),(GROWTH.Z)*((1 - (LOOP/TIME)*BOOMR2)))*BOOMR2)/TIME
					if TYPE == "Wave" then
						MSH.Offset = VT(0,0,-MSH.Scale.Z/8)
					end
					EFFECT.Transparency = EFFECT.Transparency - TRANS/TIME
					if TYPE == "Block" then
						EFFECT.CFrame = CFRAME*ANGLES(RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)))
					else
						EFFECT.CFrame = EFFECT.CFrame*ANGLES(RAD(ROTATION1),RAD(ROTATION2),RAD(ROTATION3))
					end
					if MOVEDIRECTION ~= nil then
						local ORI = EFFECT.Orientation
						EFFECT.CFrame = CF(EFFECT.Position,MOVEDIRECTION)*CF(0,0,-(MOVESPEED)*((1 - (LOOP/TIME)*BOOMR1)))
						EFFECT.CFrame = CF(EFFECT.Position)*ANGLES(RAD(ORI.X),RAD(ORI.Y),RAD(ORI.Z))
					end
				end
			else
				for LOOP = 1, TIME+1 do
					Swait()
					MSH.Scale = MSH.Scale - GROWTH/TIME
					if TYPE == "Wave" then
						MSH.Offset = VT(0,0,-MSH.Scale.Z/8)
					end
					EFFECT.Transparency = EFFECT.Transparency - TRANS/TIME
					if TYPE == "Block" then
						EFFECT.CFrame = CFRAME*ANGLES(RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)))
					else
						EFFECT.CFrame = EFFECT.CFrame*ANGLES(RAD(ROTATION1),RAD(ROTATION2),RAD(ROTATION3))
					end
					if MOVEDIRECTION ~= nil then
						local ORI = EFFECT.Orientation
						EFFECT.CFrame = CF(EFFECT.Position,MOVEDIRECTION)*CF(0,0,-MOVESPEED)
						EFFECT.CFrame = CF(EFFECT.Position)*ANGLES(RAD(ORI.X),RAD(ORI.Y),RAD(ORI.Z))
					end
				end
			end
			EFFECT.Transparency = 1
			if PLAYSSOUND == false then
				EFFECT:remove()
			else
				repeat Swait() until EFFECT:FindFirstChildOfClass("Sound") == nil
				EFFECT:remove()
			end
		else
			if PLAYSSOUND == false then
				EFFECT:remove()
			else
				repeat Swait() until EFFECT:FindFirstChildOfClass("Sound") == nil
				EFFECT:remove()
			end
		end
	end))
end

function CameraShake(AREA,RANGE,SHAKE,TIMER)
	for index, CHILD in pairs(workspace:GetChildren()) do
		if CHILD:FindFirstChildOfClass("Humanoid") then
			local HUMAN = CHILD:FindFirstChildOfClass("Humanoid")
			local ROOT = HUMAN.Torso
			if ROOT and game.Players:GetPlayerFromCharacter(CHILD) then
				if (ROOT.Position - AREA).Magnitude <= RANGE then
					if CHILD:FindFirstChild("CamShake") then
						Debris:AddItem(CHILD:FindFirstChild("CamShake"),0.05)
					end
					local CAMSHAKE = script.CamShake:Clone()
					CAMSHAKE.Parent = CHILD
					local TIMER_V = IT("NumberValue",CAMSHAKE)
					TIMER_V.Name = "Timer"
					TIMER_V.Value = TIMER
					local SHAKE_V = IT("NumberValue",CAMSHAKE)
					SHAKE_V.Name = "Shake"
					SHAKE_V.Value = SHAKE
					CAMSHAKE.Disabled = false
					Debris:AddItem(CAMSHAKE,15)
				end
			end
		end
	end
end

--Debree({Delay = 1.5,Variant = "",Location = ROOT.Position,Color = C3(1,1,1),Size = 1,Distance = 1,Material = "Slate",Scatter = 1,Amount = 1,DebreeCount = 1})
function Debree(Table)
	local KindOf = (Table.Variant or "Ring")
	local Position = (Table.Location or ROOT.Position)
	local Coloration = (Table.Color or C3(0,0,0))
	local Texture = (Table.Material or "Slate")
	local Fling = (Table.Scatter or 1)
	local Number = (Table.Amount or 1)
	local Rocks = (Table.DebreeCount or 1)
	local Range = (Table.Distance or 1)
	local Scale = (Table.Size or 1)
	local Timer = (Table.Delay or 1.5)
	coroutine.resume(coroutine.create(function()
		local ScaleVector = VT(Scale,Scale,Scale)
		local Boulders = {}
		Position = CF(Position)
		if KindOf == "Ring" or KindOf == "Both" then
			for RockValue = 1, Number do
				local LOCATION = Position * ANGLES(RAD(0), RAD((360/Number)*RockValue), RAD(0))*CF(0,MRANDOM(-math.ceil(Scale/4),math.ceil(Scale/4)),Range)
				local BOULDER = CreatePart(3, workspace, Texture, 0, 0, BRICKC("Really red"), "Debree", ScaleVector, true)
				BOULDER.CanCollide = true
				BOULDER.CFrame = LOCATION*ANGLES(RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)))
				BOULDER.Color = Coloration
				table.insert(Boulders,BOULDER)
			end
		end
		if KindOf == "Loose" or KindOf == "Both" then
			for RockValue = 1, Rocks do
				local LOCATION = Position * ANGLES(RAD(0), RAD((360/Number)*RockValue), RAD(0))*CF(0,MRANDOM(-math.ceil(Scale-(Scale/2)),math.ceil(Scale-(Scale/2))),0.7)
				local BOULDER = CreatePart(3, workspace, Texture, 0, 0, BRICKC("Really red"), "Debree", ScaleVector, false)
				BOULDER.CanCollide = true
				BOULDER.CFrame = LOCATION*ANGLES(RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)))
				BOULDER.Velocity = CF(BOULDER.Position-VT(0,4,0),BOULDER.CFrame*ANGLES(RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)))*CF(0,5,0).p).lookVector*MRANDOM(Fling-(Fling/1.5),Fling+(Fling/1.5))
				BOULDER.Color = Coloration
				table.insert(Boulders,BOULDER)
			end
		end
		if KindOf == "Random" then
			for RockValue = 1, Number do
				local LOCATION = Position * ANGLES(RAD(0), RAD((360/Number)*RockValue), RAD(0))*CF(0,MRANDOM(-math.ceil(Scale/4),math.ceil(Scale/4)),MRANDOM(0,Range))
				local BOULDER = CreatePart(3, workspace, Texture, 0, 0, BRICKC("Really red"), "Debree", ScaleVector, true)
				BOULDER.CanCollide = true
				BOULDER.CFrame = LOCATION*ANGLES(RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)))
				BOULDER.Color = Coloration
				table.insert(Boulders,BOULDER)
			end
		end
		wait(Timer)
		for E = 1, 45 do
			Swait()
			for A = 1, #Boulders do
				Boulders[A].Transparency = Boulders[A].Transparency + 1/45
			end
		end
		for A = 1, #Boulders do
			Boulders[A]:Destroy()
		end
	end))
end

function Chatter(Text,Timer)
	local chat = coroutine.wrap(function()
		if CHARACTER:FindFirstChild("SpeechBoard")~= nil then
			CHARACTER:FindFirstChild("SpeechBoard"):destroy()
		end
		local naeeym2 = IT("BillboardGui",CHARACTER)
		naeeym2.Size = UD2(0,100,0,40)
		naeeym2.StudsOffset = Vector3.new(0,2,0)
		naeeym2.Adornee = HEAD
		naeeym2.Name = "SpeechBoard"
		naeeym2.AlwaysOnTop = true
		local tecks2 = IT("TextLabel",naeeym2)
		tecks2.BackgroundTransparency = 1
		tecks2.BorderSizePixel = 0
		tecks2.Text = ""
		tecks2.Font = "Legacy"
		tecks2.TextSize = 15
		tecks2.TextStrokeTransparency = 0
		tecks2.TextColor3 = Color3.new(1,1,1)
		tecks2.TextStrokeColor3 = Color3.new(0,0,0)
		tecks2.Size = UDim2.new(1,0,0.5,0)
		for i = 1,string.len(Text),1 do
			if naeeym2.Parent ~= CHARACTER then 
				break
			end
			NewSound({ID = 418252437,PARENT = HEAD,VOLUME = 1,PITCH = MRANDOM(8,12)/10,LOOP = false,MAXDISTANCE = 75,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
			tecks2.Text = string.sub(Text,1,i)
			wait(Timer)
		end
		wait(1)
		naeeym2:Destroy()
	end)
	chat()
end

function Slaughter(WHO)
	if WHO then
		local ROOT = WHO.Torso
		local FOE = WHO.Parent
		if ROOT and FOE then
			local BONES = {
			Skull = {MeshId = 36869983,Size = VT(0.7,0.7,0.7)},
			Ribs = {MeshId = 546760032,Size = VT(2.18, 1.884, 1.105)}
			}
			local SELECTABLEBONES = {
			{MeshId = 546760045,Size = VT(0.468, 1.12, 0.346)},
			{MeshId = 546760042,Size = VT(0.366, 0.991, 0.365)},
			{MeshId = 546760029,Size = VT(0.441, 0.799, 0.347)},
			{MeshId = 546760030,Size = VT(0.605, 0.843, 0.4)}
			}
			coroutine.resume(coroutine.create(function()
				local BONEFOLDER = IT("Folder",workspace)
				BONEFOLDER.Name = "Corpse"
				for i = 1, 9 do
					local CHOSENPIECE = nil
					if i == 1 then
						CHOSENPIECE = BONES.Skull
					elseif i == 2 then
						CHOSENPIECE = BONES.Ribs
					else
						CHOSENPIECE = SELECTABLEBONES[MRANDOM(1,#SELECTABLEBONES)]
					end
					local BONE = CreatePart(3, BONEFOLDER, "Slate", 0, 0, BRICKC("Maroon"), "RIP", CHOSENPIECE.Size, false)
					BONE.CanCollide = true
					BONE.CFrame = ROOT.CFrame*CF(MRANDOM(-10,10)/30,MRANDOM(-10,10)/30,MRANDOM(-10,10)/30)
					BONE.RotVelocity = VT(MRANDOM(-10,10),MRANDOM(-10,10),MRANDOM(-10,10))
					if CHOSENPIECE.MeshId == 36869983 then
						CreateMesh("SpecialMesh", BONE, "FileMesh", CHOSENPIECE.MeshId, "", VT(1,1,1)/1.5, VT(0,0,0))
					else
						CreateMesh("SpecialMesh", BONE, "FileMesh", CHOSENPIECE.MeshId, "", VT(1,1,1), VT(0,0,0))
					end
					BONE.Velocity = CF(ROOT.Position,BONE.Position).lookVector*MRANDOM(10,50)
					OofOuchBlood(ROOT.Position,BONE.Position,75)
					NewSound({ID = 150315649,PARENT = BONE,VOLUME = 0.8,PITCH = MRANDOM(9,11)/10,LOOP = false,MAXDISTANCE = 125,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
				end
				for _, c in pairs(FOE:GetChildren()) do
					if c:IsA("BasePart") or c:IsA("Accessory") then
						c:remove()
					end
				end
				Debris:AddItem(BONEFOLDER,5)
			end))
		end
	end
end

--//====================================================\\--
--||                     CHARACTER
--\\====================================================//--

local GIANT = MODULE.Giant
GIANT.Parent = nil
local COMBO = 1
local DISGUISED = false
local SKINCOLOR = TORSO.Color
local PARTS = {}
local MIMIC_PARTS = {}
HEAD.Transparency = 0
for _, c in pairs(HEAD:GetChildren()) do
	if not c:IsA("Attachment") then
	end
end
local FACE = MODULE.Head
FACE:SetPrimaryPartCFrame(HEAD.CFrame)
local CLOTHES = {}
for _, c in pairs(FACE:GetChildren()) do
	if c ~= FACE.PrimaryPart then
		c.Parent = CHARACTER
		c.Massless = true
		c.CanCollide = false
		c.Anchored = false
		WeldParts(c,HEAD)
		table.insert(PARTS,c)
	end
end

local BLADE = MODULE.Mimicry
BLADE.Parent = CHARACTER
local TRAIL = BLADE.Metal.Trail
for _, c in pairs(BLADE:GetChildren()) do
	if c ~= BLADE.PrimaryPart then
		WeldParts(c,BLADE.PrimaryPart)
	end
	c.Massless = true
	c.CanCollide = false
	c.Anchored = false
end
BLADE:SetPrimaryPartCFrame(RIGHTARM.CFrame)
local GRAB = WeldParts(RIGHTARM,BLADE.PrimaryPart)
local GRIP = BLADE.PrimaryPart
for _, c in pairs(CHARACTER:GetDescendants()) do
	if c:IsA("BasePart") then
		c.Locked = true
		if c.Parent == CHARACTER and c.Name ~= "Teeth" then
			c.Color = SKINCOLOR
		end
	end
end
HUM.DisplayDistanceType = "None"
local GUI = MODULE.ControlsGUI
GUI.Parent = PLAYER.PlayerGui
GUI.ToggleButton.MouseButton1Click:Connect(function()
	if GUI.ToggleButton.Controls.Visible == false then
		GUI.ToggleButton.Controls.Visible = true
	elseif GUI.ToggleButton.Controls.Visible == true then
		GUI.ToggleButton.Controls.Visible = false
	end
end)

--//====================================================\\--
--||                     ABILITIES
--\\====================================================//--

function Mimic_Gimmick(MIMICWHO)
	local CalculateAttachmentsTogether = function(A,B)
		if A and B then
			return (A.Parent.CFrame*CF(A.Position-B.Position))
		else
			return nil
		end
	end
	if MIMICWHO ~= nil then
		if CHARACTER:FindFirstChild("Fake Hats") then
			CHARACTER:FindFirstChild("Fake Hats"):Remove()
		end
		if #MIMIC_PARTS > 0 then
			for E = 1, #MIMIC_PARTS do
				MIMIC_PARTS[E]:Remove()
			end
		end
		for _, c in pairs(HEAD:GetChildren()) do
			if not c:IsA("Attachment") then
				c:Remove()
			end
		end
		DISGUISED = true
		GRAB.Parent = nil
		BLADE.Parent = nil
		for E = 1, #PARTS do
			PARTS[E].Transparency = 1
		end
		HEAD.Transparency = 0
		local HED = MIMICWHO.Head
		for E = 1, #CLOTHES do
			CLOTHES[E].Parent = nil
		end
		if HED then
			for _, c in pairs(CHARACTER:GetChildren()) do
				if c:IsA("BasePart") and c.Name ~= "Teeth" then
					c.Color = HED.Color
				end
			end
		end
		local FAKEHATS = IT("Folder",CHARACTER)
		FAKEHATS.Name = "Fake Hats"
		for _, c in pairs(MIMICWHO:GetChildren()) do
			if c:IsA("CharacterMesh") or c:IsA("Shirt") or c:IsA("Pants") then
				local CLONE = c:Clone()
				CLONE.Parent = CHARACTER
				table.insert(MIMIC_PARTS,CLONE)
			elseif c:IsA("Accessory") then
				local HAT = c:FindFirstChild("Handle")
				if HAT then
					HAT.Parent = FAKEHATS
					if HAT:FindFirstChild("HatAttachment") or HAT:FindFirstChild("HairAttachment") or HAT:FindFirstChild("FaceFrontAttachment") then
						local ATTACHNAME = HAT:FindFirstChildOfClass("Attachment")
						local CFR = CalculateAttachmentsTogether(HEAD[ATTACHNAME.Name],HAT[ATTACHNAME.Name])
						if CFR then
							HAT.CFrame = CFR
							WeldParts(HEAD,HAT)
						else
							HAT:Remove()
						end
					else
						local ATTACHNAME = HAT:FindFirstChildOfClass("Attachment")
						local CFR = CalculateAttachmentsTogether(TORSO[ATTACHNAME.Name],HAT[ATTACHNAME.Name])
						if CFR then
							HAT.CFrame = CFR
							WeldParts(TORSO,HAT)
						else
							HAT:Remove()
						end
					end
				end
			elseif c.Name == "Head" then
				local FACE = c:FindFirstChild("face")
				if FACE then
					local CLONE = FACE:Clone()
					CLONE.Parent = HEAD
					table.insert(MIMIC_PARTS,CLONE)
				end
				local MESH = c:FindFirstChildOfClass("SpecialMesh") or c:FindFirstChildOfClass("BlockMesh")
				if MESH then
					local CLONE = MESH:Clone()
					CLONE.Parent = HEAD
					table.insert(MIMIC_PARTS,CLONE)
				end
			end
			if CHARACTER:FindFirstChild(c.Name) and c:IsA("BasePart") and c.Name ~= "Teeth" then
				CHARACTER:FindFirstChild(c.Name).Color = c.Color
			end
		end
	else
		if CHARACTER:FindFirstChild("Fake Hats") then
			CHARACTER:FindFirstChild("Fake Hats"):Remove()
		end
		for E = 1, #CLOTHES do
			CLOTHES[E].Parent = CHARACTER
		end
		HEAD.Transparency = 1
		for _, c in pairs(HEAD:GetChildren()) do
			if not c:IsA("Attachment") then
				c:Remove()
			end
		end
		DISGUISED = false
		if #MIMIC_PARTS > 0 then
			for E = 1, #MIMIC_PARTS do
				MIMIC_PARTS[E]:Remove()
			end
		end
		for E = 1, #PARTS do
			PARTS[E].Transparency = 0
		end
		for _, c in pairs(CHARACTER:GetChildren()) do
			if c:IsA("BasePart") and c.Name ~= "Teeth" then
				c.Color = SKINCOLOR
			end
		end
		MIMIC_PARTS = {}
		BLADE.Parent = CHARACTER
		GRAB.Parent = RIGHTARM
	end
end
function Melee()
	local MELEEAREA = function(RANGE,BEEF,KNOCKBACK)
		local DIDHIT = false
		NewSound({ID = 153647549,PARENT = ROOT,VOLUME = 1,PITCH = MRANDOM(8,12)/8,LOOP = false,MAXDISTANCE = 125,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
		for index, CHILD in pairs(workspace:GetChildren()) do
			if CHILD:FindFirstChildOfClass("Humanoid") and CHILD ~= CHARACTER then
				local HUMAN = CHILD:FindFirstChildOfClass("Humanoid")
				local TORS = CHILD:FindFirstChild("Torso") or CHILD:FindFirstChild("UpperTorso")
				if TORS then
					if (TORS.Position - ROOT.CFrame*CF(0,0,-RANGE).p).Magnitude <= RANGE+2 and ((ROOT.CFrame*CF(0,0,-1).p - TORS.Position).Magnitude < (ROOT.CFrame*CF(0,0,1).p - TORS.Position).Magnitude) then
						DIDHIT = true
						NewSound({ID = 201858024,PARENT = TORS,VOLUME = 3,PITCH = MRANDOM(8,12)/10,LOOP = false,MAXDISTANCE = 125,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
						HUMAN.Health = HUMAN.Health - (DAMAGEMULTIPLIER*BEEF)
						local BV = IT("BodyVelocity")
						BV.MaxForce = BV.MaxForce * 500
						BV.Velocity = CF(ROOT.Position,TORS.Position+VT(0,0.5,0)).lookVector*((KNOCKBACK+(BEEF/2))*DAMAGEMULTIPLIER)
						BV.Parent = TORS
						Debris:AddItem(BV,0.05)
						OofOuchBlood(TORS.Position,ROOT.Position,math.ceil(BEEF/4))
						if HUMAN.Health <= 0 then
							ManSlaughter(CHILD)
						end
					end
				end
			end
		end
		if DIDHIT == true then
			CameraShake(ROOT.CFrame*CF(0,0,-1.5).p,4,8*DAMAGEMULTIPLIER,15)
		end
	end
	ATTACKING = true
	repeat
		if DISGUISED == false then
			if COMBO == 1 then
				COMBO = 2
				for i=0, 0.3, 0.1 / ANIM_SPEED do
					Swait()
					ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(-5)), 1 / ANIM_SPEED)
					NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(0), RAD(5)), 1 / ANIM_SPEED)
					RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(90)) * ANGLES(RAD(0), RAD(180), RAD(0)) * RIGHTSHOULDERC0, 1 / ANIM_SPEED)
					GRAB.C0 = Clerp(GRAB.C0, CF(0,-1,0) * ANGLES(RAD(-40), RAD(0), RAD(0)), 1 / ANIM_SPEED)
					LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.25, 0.5, -0.2) * ANGLES(RAD(40), RAD(5), RAD(35)) * CF(0,-0.35,0) * LEFTSHOULDERC0, 1 / ANIM_SPEED)
					RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(80), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 1 / ANIM_SPEED)
					LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-95), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 1 / ANIM_SPEED)
				end
				MELEEAREA(5,35,2)
				TRAIL.Enabled = true
				NewSound({ID = 1489705211,PARENT = GRIP,VOLUME = 3,PITCH = MRANDOM(9,11)/10,LOOP = false,MAXDISTANCE = 125,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
				for i=0, 0.45, 0.1 / ANIM_SPEED do
					Swait()
					ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, -0.1) * ANGLES(RAD(0), RAD(0), RAD(45)), 1 / ANIM_SPEED)
					NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(0), RAD(-45)), 1 / ANIM_SPEED)
					RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.15, 0.5, -0.75) * ANGLES(RAD(0), RAD(0), RAD(-90)) * ANGLES(RAD(25), RAD(0), RAD(0))  * RIGHTSHOULDERC0, 1 / ANIM_SPEED)
					GRAB.C0 = Clerp(GRAB.C0, CF(0,-1,0) * ANGLES(RAD(-100), RAD(0), RAD(0)), 1 / ANIM_SPEED)
					LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-25), RAD(5), RAD(-25)) * LEFTSHOULDERC0, 1 / ANIM_SPEED)
					RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, 0) * ANGLES(RAD(-2), RAD(60), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(0)), 1 / ANIM_SPEED)
					LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -0.9, -0.3) * ANGLES(RAD(0), RAD(-100), RAD(0)) * ANGLES(RAD(-3), RAD(0), RAD(0)), 1 / ANIM_SPEED)
				end
				TRAIL.Enabled = false
			elseif COMBO == 2 then
				COMBO = 1
				for i=0, 0.1, 0.1 / ANIM_SPEED do
					Swait()
					ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(5)), 1 / ANIM_SPEED)
					NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(0), RAD(-5)), 1 / ANIM_SPEED)
					RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.1, 0.5, -0.75) * ANGLES(RAD(45), RAD(0), RAD(0))  * RIGHTSHOULDERC0, 1 / ANIM_SPEED)
					GRAB.C0 = Clerp(GRAB.C0, CF(0,-1,0) * ANGLES(RAD(-35), RAD(0), RAD(0)), 1 / ANIM_SPEED)
					LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.15, 0.5, -0.5) * ANGLES(RAD(90), RAD(5), RAD(25)) * LEFTSHOULDERC0, 1 / ANIM_SPEED)
					RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(95), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 1 / ANIM_SPEED)
					LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-80), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 1 / ANIM_SPEED)
				end
				for i=0, 0.25, 0.1 / ANIM_SPEED do
					Swait()
					ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(5)), 1 / ANIM_SPEED)
					NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(0), RAD(-5)), 1 / ANIM_SPEED)
					RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.1, 0.5, -0.75) * ANGLES(RAD(0), RAD(0), RAD(-90)) * ANGLES(RAD(35), RAD(180), RAD(0))  * RIGHTSHOULDERC0, 1 / ANIM_SPEED)
					GRAB.C0 = Clerp(GRAB.C0, CF(0,-1,0) * ANGLES(RAD(-35), RAD(0), RAD(0)), 1 / ANIM_SPEED)
					LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.15, 0.5, -0.5) * ANGLES(RAD(90), RAD(5), RAD(25)) * LEFTSHOULDERC0, 1 / ANIM_SPEED)
					RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(95), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 1 / ANIM_SPEED)
					LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-80), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 1 / ANIM_SPEED)
				end
				MELEEAREA(5,35,2)
				NewSound({ID = 1489705211,PARENT = GRIP,VOLUME = 3,PITCH = MRANDOM(9,11)/10,LOOP = false,MAXDISTANCE = 125,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
				TRAIL.Enabled = true
				for i=0, 0.45, 0.1 / ANIM_SPEED do
					Swait()
					ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, -0.1) * ANGLES(RAD(0), RAD(0), RAD(-45)), 1 / ANIM_SPEED)
					NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(0), RAD(45)), 1 / ANIM_SPEED)
					RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(90)) * RIGHTSHOULDERC0, 1 / ANIM_SPEED)
					GRAB.C0 = Clerp(GRAB.C0, CF(0,-1,0) * ANGLES(RAD(-50), RAD(0), RAD(0)), 1 / ANIM_SPEED)
					LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-20), RAD(5), RAD(-35)) * CF(0,-0.35,0) * LEFTSHOULDERC0, 1 / ANIM_SPEED)
					RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -0.9, -0.3) * ANGLES(RAD(0), RAD(100), RAD(0)) * ANGLES(RAD(-3), RAD(0), RAD(0)), 1 / ANIM_SPEED)
					LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(-10), RAD(-60), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(0)), 1 / ANIM_SPEED)
				end
				TRAIL.Enabled = false
			end
		else
			if COMBO == 1 then
				COMBO = 2
				for i=0, 0.2, 0.1 / ANIM_SPEED do
					Swait()
					ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(35)), 1.5 / ANIM_SPEED)
					NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(0), RAD(-35)), 1.5 / ANIM_SPEED)
					RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.45, -0.2, -0.5) * ANGLES(RAD(170), RAD(0), RAD(0))*ANGLES(0,RAD(-75),0) * RIGHTSHOULDERC0, 1.5 / ANIM_SPEED)
					LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0.5) * ANGLES(RAD(90), RAD(0), RAD(0)) * LEFTSHOULDERC0, 1.5 / ANIM_SPEED)
					RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, -0) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1.5 / ANIM_SPEED)
					LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, -0) * ANGLES(RAD(0), RAD(-45), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1.5 / ANIM_SPEED)
				end
				MELEEAREA(1.5,5,10)
				for i=0, 0.05, 0.1 / ANIM_SPEED do
					Swait()
					ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(-35)), 1.5 / ANIM_SPEED)
					NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(0), RAD(35)), 1.5 / ANIM_SPEED)
					RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.45, -0.2, -0.5) * ANGLES(RAD(170), RAD(0), RAD(0))*ANGLES(0,RAD(-75),0) * RIGHTSHOULDERC0, 1.5 / ANIM_SPEED)
					LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(90), RAD(0), RAD(-25))*CF(0,-0.5,0) * LEFTSHOULDERC0, 2 / ANIM_SPEED)
					RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, -0) * ANGLES(RAD(0), RAD(45), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1.5 / ANIM_SPEED)
					LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, -0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1.5 / ANIM_SPEED)
				end
				for i=0, 0.15, 0.1 / ANIM_SPEED do
					Swait()
					ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(-25)), 1.5 / ANIM_SPEED)
					NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(0), RAD(25)), 1.5 / ANIM_SPEED)
					RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.45, -0.2, -0.5) * ANGLES(RAD(170), RAD(0), RAD(0))*ANGLES(0,RAD(-75),0) * RIGHTSHOULDERC0, 1.5 / ANIM_SPEED)
					LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(90), RAD(0), RAD(25))*CF(0,-0.25,0) * LEFTSHOULDERC0, 1 / ANIM_SPEED)
					RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, -0) * ANGLES(RAD(0), RAD(55), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1.5 / ANIM_SPEED)
					LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, -0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1.5 / ANIM_SPEED)
				end
			elseif COMBO == 2 then
				COMBO = 1
				for i=0, 0.2, 0.1 / ANIM_SPEED do
					Swait()
					ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(-35)), 1.5 / ANIM_SPEED)
					NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(0), RAD(35)), 1.5 / ANIM_SPEED)
					RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0.5) * ANGLES(RAD(90), RAD(0), RAD(0)) * RIGHTSHOULDERC0, 1.5 / ANIM_SPEED)
					LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.45, -0.2, -0.5)* ANGLES(RAD(170), RAD(0), RAD(0))*ANGLES(0,RAD(75),0) * LEFTSHOULDERC0, 1.5 / ANIM_SPEED)
					RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, -0) * ANGLES(RAD(0), RAD(45), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1.5 / ANIM_SPEED)
					LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, -0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1.5 / ANIM_SPEED)
				end
				MELEEAREA(1.5,5,10)
				for i=0, 0.05, 0.1 / ANIM_SPEED do
					Swait()
					ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(35)), 1.5 / ANIM_SPEED)
					NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(0), RAD(-35)), 1.5 / ANIM_SPEED)
					RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(90), RAD(0), RAD(25))*CF(0,-0.5,0) * RIGHTSHOULDERC0, 2 / ANIM_SPEED)
					LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.45, -0.2, -0.5)* ANGLES(RAD(170), RAD(0), RAD(0))*ANGLES(0,RAD(75),0) * LEFTSHOULDERC0, 1.5 / ANIM_SPEED)
					RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, -0) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1.5 / ANIM_SPEED)
					LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, -0) * ANGLES(RAD(0), RAD(-45), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1.5 / ANIM_SPEED)
				end
				for i=0, 0.15, 0.1 / ANIM_SPEED do
					Swait()
					ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(25)), 1.5 / ANIM_SPEED)
					NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(0), RAD(-25)), 1.5 / ANIM_SPEED)
					RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(90), RAD(0), RAD(-25))*CF(0,-0.25,0) * RIGHTSHOULDERC0, 1 / ANIM_SPEED)
					LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.45, -0.2, -0.5)* ANGLES(RAD(170), RAD(0), RAD(0))*ANGLES(0,RAD(75),0) * LEFTSHOULDERC0, 1.5 / ANIM_SPEED)
					RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, -0) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1.5 / ANIM_SPEED)
					LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, -0) * ANGLES(RAD(0), RAD(-55), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1.5 / ANIM_SPEED)
				end
			end
		end
	until MOUSEHOLD == false
	ATTACKING = false
end
function Disguise()
	local SPOT = ROOT.Position-VT(0,2.5,0)
	local DIST = 7
	local TARGET = nil
	for index, CHILD in pairs(workspace:GetChildren()) do
		if CHILD:FindFirstChild("Slaughtered") then
			local TORSO = CHILD:FindFirstChild("Torso") or CHILD:FindFirstChild("UpperTorso")
			if TORSO then
				if (TORSO.Position - SPOT).Magnitude < DIST then
					DIST = (TORSO.Position - SPOT).Magnitude
					TARGET = CHILD
				end
			end
		end
	end
	if TARGET then
		TARGET.Archivable = true
		local TARGET2 = TARGET:Clone()
		coroutine.resume(coroutine.create(function()
			for index, CHILD in pairs(TARGET:GetChildren()) do
				if not CHILD:IsA("Script") then
					CHILD:Remove()
				end
			end
		end))
		TARGET2.Parent = Effects
		for index, CHILD in pairs(TARGET2:GetDescendants()) do
			if CHILD:IsA("Sound") then
				CHILD:Remove()
			end
		end
		local T_HED = TARGET2:FindFirstChild("Head")
		if T_HED then
			ROOT.Anchored = true
			ROOT.CFrame = CF(ROOT.Position,VT(T_HED.Position.X,ROOT.Position.Y,T_HED.Position.Z))
			ATTACKING = true
			for i=0, 0.3, 0.1 / ANIM_SPEED do
				Swait()
				ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, -1) * ANGLES(RAD(30), RAD(0), RAD(0)), 1.5 / ANIM_SPEED)
				NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1.5 / ANIM_SPEED)
				RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(-45), RAD(-22.5), RAD(5)) * RIGHTSHOULDERC0, 0.5 / ANIM_SPEED)
				GRAB.C0 = Clerp(GRAB.C0, CF(0, -1, 0) * ANGLES(RAD(45), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
				RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, 0, -0.5) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1.5 / ANIM_SPEED)
				LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, -0.2) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(25)), 1.5 / ANIM_SPEED)
			end
			local GRABA = IT("Attachment",LEFTARM)
			GRABA.Position = VT(0,-1.5,0)
			local GRABB = IT("Attachment",T_HED)
			local GRABAT = IT("BallSocketConstraint",GRABA)
			GRABAT.Attachment0 = GRABA
			GRABAT.Attachment1 = GRABB
			for i=0, 2, 0.1 / ANIM_SPEED do
				Swait()
				ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(-45)), 0.5 / ANIM_SPEED)
				NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(0), RAD(45)), 0.5 / ANIM_SPEED)
				RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(-45), RAD(-22.5), RAD(5)) * RIGHTSHOULDERC0, 0.5 / ANIM_SPEED)
				GRAB.C0 = Clerp(GRAB.C0, CF(0, -1, 0) * ANGLES(RAD(45), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
				LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(90), RAD(0), RAD(-45)) * LEFTSHOULDERC0, 0.5 / ANIM_SPEED)
				RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(100), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
				LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-35), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
			end
			GRABA:Remove()
			GRABB:Remove()
			GRABAT:Remove()
			Mimic_Gimmick(TARGET2)
			Slaughter(TARGET2:FindFirstChildOfClass("Humanoid"))
			TARGET2:Remove()
			ROOT.Anchored = false
			ATTACKING = false
		end
	end
end
function Execution()
	if DISGUISED == false then
		local GYRO = IT("BodyGyro")
		GYRO.D = 20
		GYRO.P = 5000
		GYRO.MaxTorque = VT(0,4000000,0)
		GYRO.CFrame = ROOT.CFrame
		GYRO.Parent = ROOT
		HUM.WalkSpeed = 10
		HUM.JumpPower = 75
		ATTACKING = true
		NewSound({ID = 3075934627,PARENT = ROOT,VOLUME = 10,PITCH = MRANDOM(95,105)/100,LOOP = false,MAXDISTANCE = 125,EMITTERSIZE = 35,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
		for i=0, 1, 0.1 / ANIM_SPEED do
			Swait()
			ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(-25)), 0.5 / ANIM_SPEED)
			NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(-10), RAD(20)), 0.5 / ANIM_SPEED)
			RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(90)) * ANGLES(RAD(0), RAD(180), RAD(0)) * RIGHTSHOULDERC0, 0.5 / ANIM_SPEED)
			GRAB.C0 = Clerp(GRAB.C0, CF(0,-1,0) * ANGLES(RAD(-40), RAD(0), RAD(0)), 1 / ANIM_SPEED)
			LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.25, 0.5, -0.2) * ANGLES(RAD(40), RAD(5), RAD(35)) * CF(0,-0.35,0) * LEFTSHOULDERC0, 0.5 / ANIM_SPEED)
			RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(50), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
			LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-95), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		end
		for i = 1, 8 do
			WACKYEFFECT({Time = 10+(i*5), EffectType = "Round Slash", Size = VT(i/75,0,i/75)+VT(0.05,0,0.05), Size2 = VT(i/75,0,i/75)+VT(0.1,0,0.1), Transparency = 0.5, Transparency2 = 1, CFrame = ROOT.CFrame * ANGLES(RAD(0), RAD(90), RAD(0)), MoveToPos = nil, RotationX = MRANDOM(-10,10)/50, RotationY = MRANDOM(-10,10), RotationZ = MRANDOM(-10,10)/50, Material = "Neon", Color = C3(1,0,0), SoundID = nil, SoundPitch = nil, SoundVolume = nil, UseBoomerangMath = false, Boomerang = 0, SizeBoomerang = 0})
		end
		CameraShake(ROOT.Position,25,8,35)
		ROOT.Anchored = true
		TRAIL.Enabled = true
		NewSound({ID = 1489705211,PARENT = GRIP,VOLUME = 2,PITCH = MRANDOM(9,11)/15,LOOP = false,MAXDISTANCE = 125,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
		NewSound({ID = 444667859,PARENT = GRIP,VOLUME = 3,PITCH = MRANDOM(9,11)/10,LOOP = false,MAXDISTANCE = 125,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
		for i=0, 0.7, 0.1 / ANIM_SPEED do
			Swait()
			for index, CHILD in pairs(workspace:GetChildren()) do
				if CHILD:FindFirstChildOfClass("Humanoid") and CHILD ~= CHARACTER then
					local HUMAN = CHILD:FindFirstChildOfClass("Humanoid")
					local ROOT2 = HUMAN.Torso
					if ROOT2 and HUMAN.Health > 0 then
						if (ROOT2.Position - ROOT.Position).Magnitude < 20 and (ROOT2.Position.Y < ROOT.Position.Y+7 and ROOT2.Position.Y > ROOT.Position.Y-7) then
							Slaughter(HUMAN)
						end
					end
				end
			end
			ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, -0.1) * ANGLES(RAD(0), RAD(0), RAD(45)) * ANGLES(RAD(15), RAD(0), RAD(0)), 0.75 / ANIM_SPEED)
			NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(0), RAD(-45)), 0.75 / ANIM_SPEED)
			RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.15, 0.5, -0.75) * ANGLES(RAD(0), RAD(0), RAD(-90)) * ANGLES(RAD(25), RAD(0), RAD(0))  * RIGHTSHOULDERC0, 0.75 / ANIM_SPEED)
			GRAB.C0 = Clerp(GRAB.C0, CF(0,-1,0) * ANGLES(RAD(-100), RAD(0), RAD(0)), 0.75 / ANIM_SPEED)
			LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-25), RAD(5), RAD(-25)) * LEFTSHOULDERC0, 0.75 / ANIM_SPEED)
			RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, 0) * ANGLES(RAD(-2), RAD(40), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(-20)), 0.75 / ANIM_SPEED)
			LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -0.9, -0.5) * ANGLES(RAD(0), RAD(-100), RAD(0)) * ANGLES(RAD(-3), RAD(0), RAD(0)), 0.75 / ANIM_SPEED)
		end
		ROOT.Anchored = false
		ROOT.Velocity = VT(0,0,0)
		GYRO:Remove()
		HUM.WalkSpeed = 25
		HUM.JumpPower = 50
		TRAIL.Enabled = false
		ATTACKING = false
	end
end
function Hello()
	if DISGUISED == false then
		local GYRO = IT("BodyGyro")
		GYRO.D = 20
		GYRO.P = 5000
		GYRO.MaxTorque = VT(0,4000000,0)
		GYRO.CFrame = CF(ROOT.Position,MOUSEPOS)
		GYRO.Parent = ROOT
		coroutine.resume(coroutine.create(function()
			repeat
				Swait()
				GYRO.CFrame = CF(ROOT.Position,MOUSEPOS)
			until ATTACKING == false
			GYRO:Remove()
		end))
		HUM.WalkSpeed = 0
		HUM.JumpPower = 0
		ATTACKING = true
		NewSound({ID = 145486992,PARENT = ROOT,VOLUME = 10,PITCH = MRANDOM(95,105)/100,LOOP = false,MAXDISTANCE = 125,EMITTERSIZE = 35,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
		for i=0, 0.65, 0.1 / ANIM_SPEED do
			Swait()
			ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(-45)), 0.5 / ANIM_SPEED)
			NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(10), RAD(10), RAD(45)), 0.5 / ANIM_SPEED)
			RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(-45), RAD(-22.5), RAD(5)) * RIGHTSHOULDERC0, 0.5 / ANIM_SPEED)
			GRAB.C0 = Clerp(GRAB.C0, CF(0, -1, 0) * ANGLES(RAD(45), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
			LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(90), RAD(0), RAD(-45)) * LEFTSHOULDERC0, 1 / ANIM_SPEED)
			RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(35), RAD(0)) * ANGLES(RAD(-3), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
			LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-65), RAD(0)) * ANGLES(RAD(-6), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		end
		CameraShake(LEFTARM.CFrame*CF(0,-1.1,0).p,10,4,5)
		coroutine.resume(coroutine.create(function()
			WACKYEFFECT({Time = 10, EffectType = "Ring", Size = VT(0,0,0), Size2 = VT(5,5,0), Transparency = 0.8, Transparency2 = 1, CFrame = LEFTARM.CFrame*CF(0,-1.1,0) * ANGLES(RAD(90), RAD(0), RAD(0)), MoveToPos = nil, RotationX = 0, RotationY = 0, RotationZ = 0, Material = "Neon", Color = C3(1,0,0), SoundID = nil, SoundPitch = nil, SoundVolume = nil, UseBoomerangMath = false, Boomerang = 0, SizeBoomerang = 0})
			local CFR = CF(ROOT.Position,MOUSEPOS)
			local ORI = ROOT.Position
			for i = 1, 50 do
				Swait()
				CFR = CFR * CF(0,0,-10)
				for index, CHILD in pairs(workspace:GetChildren()) do
					if CHILD:FindFirstChildOfClass("Humanoid") and CHILD ~= CHARACTER then
						local HUMAN = CHILD:FindFirstChildOfClass("Humanoid")
						local ROOT2 = HUMAN.Torso
						if ROOT2 and HUMAN.Health > 0 then
							if (ROOT2.Position - CFR.p).Magnitude < 15 and ((CFR*CF(0,0,-1).p - ROOT2.Position).Magnitude < (CFR*CF(0,0,1).p - ROOT2.Position).Magnitude) then
								HUMAN.Health = HUMAN.Health - 43
								if HUMAN.Health <= 0 or HUMAN.MaxHealth > 1000 then
									Slaughter(HUMAN)
								else
									ROOT2.Velocity = VT(0,0,0)
									OofOuchBlood(ROOT2.Position,ORI,12)
								end
							end
						end
					end
				end
				WACKYEFFECT({Time = 10, EffectType = "Ring", Size = VT(3,3,0), Size2 = VT(2.5,2.5,0), Transparency = 0.95, Transparency2 = 1, CFrame = CFR, MoveToPos = nil, RotationX = 0, RotationY = 0, RotationZ = 0, Material = "Neon", Color = C3(1,0,0), SoundID = nil, SoundPitch = nil, SoundVolume = nil, UseBoomerangMath = false, Boomerang = 0, SizeBoomerang = 0})
			end
		end))
		HUM.WalkSpeed = 25
		HUM.JumpPower = 50
		ATTACKING = false
	end
end
function Hello_Yank()
	if DISGUISED == false then
		local GYRO = IT("BodyGyro")
		GYRO.D = 20
		GYRO.P = 5000
		GYRO.MaxTorque = VT(0,4000000,0)
		GYRO.CFrame = CF(ROOT.Position,MOUSEPOS)
		GYRO.Parent = ROOT
		HUM.WalkSpeed = 0
		HUM.JumpPower = 0
		ATTACKING = true
		NewSound({ID = 145486992,PARENT = ROOT,VOLUME = 10,PITCH = MRANDOM(95,105)/100,LOOP = false,MAXDISTANCE = 125,EMITTERSIZE = 35,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
		for i=0, 0.65, 0.1 / ANIM_SPEED do
			Swait()
			GYRO.CFrame = CF(ROOT.Position,MOUSEPOS)
			ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(-45)), 0.5 / ANIM_SPEED)
			NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(10), RAD(10), RAD(45)), 0.5 / ANIM_SPEED)
			RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(-45), RAD(-22.5), RAD(5)) * RIGHTSHOULDERC0, 0.5 / ANIM_SPEED)
			GRAB.C0 = Clerp(GRAB.C0, CF(0, -1, 0) * ANGLES(RAD(45), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
			LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(90), RAD(0), RAD(-45)) * LEFTSHOULDERC0, 1 / ANIM_SPEED)
			RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(35), RAD(0)) * ANGLES(RAD(-3), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
			LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-65), RAD(0)) * ANGLES(RAD(-6), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		end
		local HIT = nil
		local HUMAN = nil
		local DIRECTHIT = nil
		CameraShake(LEFTARM.CFrame*CF(0,-1.1,0).p,10,4,5)
		WACKYEFFECT({Time = 10, EffectType = "Ring", Size = VT(0,0,0), Size2 = VT(5,5,0), Transparency = 0.8, Transparency2 = 1, CFrame = LEFTARM.CFrame*CF(0,-1.1,0) * ANGLES(RAD(90), RAD(0), RAD(0)), MoveToPos = nil, RotationX = 0, RotationY = 0, RotationZ = 0, Material = "Neon", Color = C3(1,0,0), SoundID = nil, SoundPitch = nil, SoundVolume = nil, UseBoomerangMath = false, Boomerang = 0, SizeBoomerang = 0})
		local POINTA = LEFTARM.CFrame*CF(0,-1.1,0).p
		local RAYHIT,POS = Raycast(POINTA,CF(POINTA,MOUSEPOS).lookVector,500,CHARACTER)
		if RAYHIT then
			if RAYHIT.Parent ~= workspace and RAYHIT.Anchored == false then
				local HUM = RAYHIT.Parent:FindFirstChildOfClass("Humanoid") or RAYHIT.Parent.Parent:FindFirstChildOfClass("Humanoid")
				if HUM then
					if HUM.Health > 0 then
						HIT = HUM.Torso
						DIRECTHIT = RAYHIT
						HUMAN = HUM
					end
				end
			end
		end
		if HIT and HUMAN then
			local DIST = math.ceil((HIT.Position - ROOT.Position).Magnitude/3)
			local A = IT("Attachment",LEFTARM)
			local B = IT("Attachment",DIRECTHIT)
			local BEAM = MODULE.Beam:Clone()
			BEAM.Parent = A
			BEAM.Attachment0 = A
			BEAM.Attachment1 = B
			HIT.Anchored = true
			for i = 1, DIST do
				Swait()
				GYRO.CFrame = CF(ROOT.Position,HIT.Position)
				HIT.CFrame = CF(CF(HIT.Position,ROOT.Position)*CF(0,0,-3).p) * ANGLES(RAD(0), RAD(HIT.Orientation.Y), RAD(0))
				ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(-45)), 0.5 / ANIM_SPEED)
				NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(10), RAD(10), RAD(45)), 0.5 / ANIM_SPEED)
				RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(-45), RAD(-22.5), RAD(5)) * RIGHTSHOULDERC0, 0.5 / ANIM_SPEED)
				GRAB.C0 = Clerp(GRAB.C0, CF(0, -1, 0) * ANGLES(RAD(45), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
				LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(90), RAD(0), RAD(-45)) * LEFTSHOULDERC0, 1 / ANIM_SPEED)
				RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(35), RAD(0)) * ANGLES(RAD(-3), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
				LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-65), RAD(0)) * ANGLES(RAD(-6), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
				ApplyDamageTo(HUMAN,1.5)
				if (HIT.Position - ROOT.Position).Magnitude <= 3 or HUMAN.Health <= 0 then
					break
				end
			end
			A:Remove()
			B:Remove()
			BEAM:Remove()
			HIT.Anchored = false
		end
		GYRO:Remove()
		HUM.WalkSpeed = 25
		HUM.JumpPower = 50
		ATTACKING = false
	end
end
function Flesh()
	local HITFLOOR = Raycast(ROOT.Position, (CF(ROOT.Position, ROOT.Position + VT(0, -1, 0))).lookVector, 3.55+HUM.HipHeight, CHARACTER)
	if HITFLOOR and DISGUISED == false then
		ROOT.Anchored = true
		ATTACKING = true
		for i=0, 0.15, 0.1 / ANIM_SPEED do
			Swait()
			ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(-5)), 0.5 / ANIM_SPEED)
			NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(10), RAD(10), RAD(5)), 0.5 / ANIM_SPEED)
			RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(90), RAD(0), RAD(0)) * RIGHTSHOULDERC0, 1 / ANIM_SPEED)
			GRAB.C0 = Clerp(GRAB.C0, CF(0, -1, 0) * ANGLES(RAD(45), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
			LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(100), RAD(15), RAD(-45)) * LEFTSHOULDERC0, 1 / ANIM_SPEED)
			RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(80), RAD(0)) * ANGLES(RAD(-3), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
			LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-65), RAD(0)) * ANGLES(RAD(-6), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		end
		for i=0, 0.65, 0.1 / ANIM_SPEED do
			Swait()
			ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(-5)), 0.5 / ANIM_SPEED)
			NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(10), RAD(10), RAD(5)), 0.5 / ANIM_SPEED)
			RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(160), RAD(0), RAD(0)) * RIGHTSHOULDERC0, 0.5 / ANIM_SPEED)
			GRAB.C0 = Clerp(GRAB.C0, CF(0, -1, 0) * ANGLES(RAD(-45), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
			LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(45), RAD(15), RAD(-45)) * LEFTSHOULDERC0, 1 / ANIM_SPEED)
			RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(80), RAD(0)) * ANGLES(RAD(-3), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
			LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-65), RAD(0)) * ANGLES(RAD(-6), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		end
		NewSound({ID = 444667859,PARENT = ROOT,VOLUME = 5,PITCH = MRANDOM(95,105)/100,LOOP = false,MAXDISTANCE = 125,EMITTERSIZE = 35,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
		local DONE = false
		coroutine.resume(coroutine.create(function()
			wait(0.5)
			local SPOT = MOUSEPOS
			local HITFLOOR,POS = Raycast(MOUSEPOS+VT(0,0.1,0), (CF(ROOT.Position, ROOT.Position + VT(0, -1, 0))).lookVector, 50, CHARACTER)
			if HITFLOOR then
				if HITFLOOR.Anchored == false then
					local BREAK = false
					local LOOP = 0
					repeat
						HITFLOOR,POS = Raycast(POS+VT(0,0.1,0), (CF(ROOT.Position, ROOT.Position + VT(0, -1, 0))).lookVector, 50, HITFLOOR.Parent)
						if HITFLOOR then
							if HITFLOOR.Anchored == true then
								BREAK = true
							end
						else
							BREAK = true
						end
						LOOP = LOOP + 1
					until BREAK == true or LOOP > 20
				end
				if HITFLOOR then
					local SPIKE = GIANT:Clone()
					SPIKE.Parent = Effects
					local OR = MRANDOM(0,359)
					SPIKE:SetPrimaryPartCFrame(CF(POS)*ANGLES(0,RAD(OR),0))
					AreaOfEffect(POS,20,25,65,false)
					CameraShake(POS,30,5,12)
					WACKYEFFECT({Time = 25, EffectType = "Sphere", Size = VT(0,0,0), Size2 = VT(25,0.1,25), Transparency = 0, Transparency2 = 1, CFrame = CF(POS), MoveToPos = nil, RotationX = 0, RotationY = 0, RotationZ = 0, Material = "Neon", Color = C3(1,0,0), SoundID = 284228088, SoundPitch = 1, SoundVolume = 0.5})
					NewSound({ID = 444667859,PARENT = SPIKE.PrimaryPart,VOLUME = 5,PITCH = MRANDOM(95,105)/150,LOOP = false,MAXDISTANCE = 300,EMITTERSIZE = 35,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
					for i = 1, 25 do
						Swait()
						SPIKE:SetPrimaryPartCFrame(SPIKE.PrimaryPart.CFrame*CF(0,(25-i)/11,0))
					end
					DONE = true
					wait(0.5)
					for i = 1, 25 do
						Swait()
						SPIKE:SetPrimaryPartCFrame(SPIKE.PrimaryPart.CFrame*CF(0,-i/11,0))
					end
					SPIKE:Remove()
				end
			else
				DONE = true
			end
		end))
		repeat
			Swait()
			ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, -1) * ANGLES(RAD(30), RAD(0), RAD(0)), 1.5 / ANIM_SPEED)
			NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1.5 / ANIM_SPEED)
			RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(120), RAD(0), RAD(5)) * RIGHTSHOULDERC0, 0.5 / ANIM_SPEED)
			GRAB.C0 = Clerp(GRAB.C0, CF(0, -1, 0) * ANGLES(RAD(170), RAD(0), RAD(0)), 1.5 / ANIM_SPEED)
			RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, 0, -0.5) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1.5 / ANIM_SPEED)
			LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, -0.2) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(25)), 1.5 / ANIM_SPEED)
		until DONE == true
		ROOT.Anchored = false
		ATTACKING = false
	end
end
function Taunt()
	ATTACKING = true
	HUM.WalkSpeed = 0
	HUM.JumpPower = 0
	local S = NewSound({ID = 1450040007,PARENT = ROOT,VOLUME = 10,PITCH = MRANDOM(95,105)/100,LOOP = false,MAXDISTANCE = 100,EMITTERSIZE = 35,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
	for i=0, 2, 0.1 / ANIM_SPEED do
		Swait()
		ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0 + 0.05 * COS(SINE / 24)) * ANGLES(RAD(0), RAD(0), RAD(-15)), 0.5 / ANIM_SPEED)
		NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(25 - 1.5 * COS(SINE / 24)), RAD(10), RAD(15)), 0.5 / ANIM_SPEED)
		RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5 + 0.1 * COS(SINE / 24), 0) * ANGLES(RAD(-45 - 1.5 * SIN(SINE / 24)), RAD(-22.5), RAD(5 + 1.5 * COS(SINE / 24))) * RIGHTSHOULDERC0, 0.5 / ANIM_SPEED)
		GRAB.C0 = Clerp(GRAB.C0, CF(0, -1, 0) * ANGLES(RAD(45), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(90), RAD(0), RAD(-15)) * LEFTSHOULDERC0, 0.5 / ANIM_SPEED)
		RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1 - 0.05 * COS(SINE / 24), 0) * ANGLES(RAD(0), RAD(70), RAD(0)) * ANGLES(RAD(-3), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1 - 0.05 * COS(SINE / 24), 0) * ANGLES(RAD(0), RAD(-65), RAD(0)) * ANGLES(RAD(-6), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
	end
	HUM.WalkSpeed = 25
	HUM.JumpPower = 50
	ATTACKING = false
end
function AttackTemplate()
	ATTACKING = true
	for i=0, 1, 0.1 / ANIM_SPEED do
		Swait()
		ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(0)) * RIGHTSHOULDERC0, 0.5 / ANIM_SPEED)
		GRAB.C0 = Clerp(GRAB.C0, CF(0, -1, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(0)) * LEFTSHOULDERC0, 0.5 / ANIM_SPEED)
		RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
	end
	ATTACKING = false
end

--//====================================================\\--
--||                       WRAP
--\\====================================================//--
UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 and not ATTACKING then
        MOUSEHOLD = true
        Melee()
    elseif input.KeyCode == Enum.KeyCode.Q then
        KEYHOLD = true
        if HUM.WalkSpeed <= 66 then
            HUM.WalkSpeed = 66
        else
            HUM.WalkSpeed = 25
        end
    elseif input.KeyCode == Enum.KeyCode.M then
        KEYHOLD = true
        if ROOT:FindFirstChild("BGM_MUSIC") then
            ROOT:FindFirstChild("BGM_MUSIC"):Remove()
        else
            local M = NewSound({ID = 6661499340,PARENT = ROOT, 10,VOLUME = 1,PITCH = 1,LOOP = true,MAXDISTANCE = 300,EMITTERSIZE = 300,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
            M.Name = "BGM_MUSIC"
        end
    elseif input.KeyCode == Enum.KeyCode.Z then
        Disguise()
    elseif input.KeyCode == Enum.KeyCode.X then
        Execution()
    elseif input.KeyCode == Enum.KeyCode.C then
        Hello()
    elseif input.KeyCode == Enum.KeyCode.V then
        Flesh()
    elseif input.KeyCode == Enum.KeyCode.B then
        Hello_Yank()
    elseif input.KeyCode == Enum.KeyCode.N and DISGUISED == true then
        Mimic_Gimmick(nil)
    elseif input.KeyCode == Enum.KeyCode.T then
        Taunt()
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        MOUSEHOLD = false
    elseif input.KeyCode == Enum.KeyCode.Q or input.KeyCode == Enum.KeyCode.M then
        KEYHOLD = false
    end
end)
--
local M = NewSound({ID = 4919006300,PARENT = ROOT, 10,VOLUME = 1,PITCH = 1,LOOP = true,MAXDISTANCE = 300,EMITTERSIZE = 300,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
M.Name = "BGM_MUSIC"

HUM.HealthChanged:Connect(function()
	HUM.PlatformStand = false
	HUM.MaxHealth = 9e9
	HUM.Health = 9e9
	HUM.Name = PLAYER.UserId
end)
HUM.PlatformStand = false
HUM.MaxHealth = 9e9
HUM.Health = 9e9
HUM.Name = PLAYER.UserId
script.Parent = PLAYER.Backpack
HUM.WalkSpeed = 25
while true do
	Swait()
	SINE = SINE + CHANGE
	if CHARACTER:FindFirstChild("Animate") then
		CHARACTER:FindFirstChild("Animate"):Destroy()
	end
	if CHARACTER:FindFirstChild("Sound") then
		CHARACTER:FindFirstChild("Sound"):Destroy()
	end
	for _,v in next, HUM:GetPlayingAnimationTracks() do
		v:Stop();
	end
	local TORSOVELOCITY = (ROOT.Velocity * VT(1, 0, 1)).magnitude
	local TORSOVERTICALVELOCITY = ROOT.Velocity.y
	local HITFLOOR = Raycast(ROOT.Position, (CF(ROOT.Position, ROOT.Position + VT(0, -1, 0))).lookVector, 3.55+HUM.HipHeight, CHARACTER)
	local WALKSPEEDVALUE = 6.5-(2*(HUM.WalkSpeed/16))
	if WALKSPEEDVALUE <= 3 then
		WALKSPEEDVALUE = 3
	end
	local SITTING = HUM.Sit
	local ADD = HUM.WalkSpeed*2
	if ADD > 60 then
		ADD = 60
	end
	if ANIM == "Walk" and TORSOVELOCITY > 1 and ROOT.Anchored == false and SITTING == false then
		ROOTJOINT.C1 = Clerp(ROOTJOINT.C1, ROOTC0 * CF(0, 0, -0.05 * COS(SINE / (WALKSPEEDVALUE / 2))) * ANGLES(RAD(0), RAD(0) - ROOT.RotVelocity.Y / 85, RAD(0)), 2 / ANIM_SPEED)
		NECK.C1 = Clerp(NECK.C1, CF(0, -0.5, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * ANGLES(RAD(2.5 * SIN(SINE / (WALKSPEEDVALUE / 2))), RAD(0), RAD(0) - HEAD.RotVelocity.Y / 85), 0.8 / ANIM_SPEED)
		if ATTACKING == false then
			RIGHTHIP.C1 = Clerp(RIGHTHIP.C1, CF(0.5, 0.875 - 0.3 * SIN(SINE / WALKSPEEDVALUE), -0.5 * COS(SINE / WALKSPEEDVALUE) +0.2+ 0.7 * COS(SINE / WALKSPEEDVALUE)) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0) - RIGHTLEG.RotVelocity.Y / 85, RAD(0), RAD(-5+(25+ADD) * COS(SINE / WALKSPEEDVALUE))), 2 / ANIM_SPEED)
			LEFTHIP.C1 = Clerp(LEFTHIP.C1, CF(-0.5, 0.875 + 0.3 * SIN(SINE / WALKSPEEDVALUE), 0.5 * COS(SINE / WALKSPEEDVALUE) +0.2+ -0.7 * COS(SINE / WALKSPEEDVALUE)) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0) + LEFTLEG.RotVelocity.Y / 85, RAD(0), RAD(5+(25+ADD) * COS(SINE / WALKSPEEDVALUE))), 2 / ANIM_SPEED)
		else
			RIGHTHIP.C1 = Clerp(RIGHTHIP.C1, CF(0.5, 0.875 - 0.3 * SIN(SINE / WALKSPEEDVALUE), -0.5 * COS(SINE / WALKSPEEDVALUE) +0.2+ 0.2 * COS(SINE / WALKSPEEDVALUE)) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0) - RIGHTLEG.RotVelocity.Y / 85, RAD(0), RAD(15+(12+ADD) * COS(SINE / WALKSPEEDVALUE))), 2 / ANIM_SPEED)
			LEFTHIP.C1 = Clerp(LEFTHIP.C1, CF(-0.5, 0.875 + 0.3 * SIN(SINE / WALKSPEEDVALUE), 0.5 * COS(SINE / WALKSPEEDVALUE) +0.2+ -0.2 * COS(SINE / WALKSPEEDVALUE)) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0) + LEFTLEG.RotVelocity.Y / 85, RAD(0), RAD(-15+(12+ADD) * COS(SINE / WALKSPEEDVALUE))), 2 / ANIM_SPEED)
		end
	elseif (ANIM ~= "Walk") or (TORSOVELOCITY < 1) or ROOT.Anchored == true or SITTING == true then
		ROOTJOINT.C1 = Clerp(ROOTJOINT.C1, ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / ANIM_SPEED)
		NECK.C1 = Clerp(NECK.C1, CF(0, -0.5, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / ANIM_SPEED)
		RIGHTHIP.C1 = Clerp(RIGHTHIP.C1, CF(0.5, 1, 0) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / ANIM_SPEED)
		LEFTHIP.C1 = Clerp(LEFTHIP.C1, CF(-0.5, 1, 0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / ANIM_SPEED)
	end
	if SITTING == false then
		if DISGUISED == false then
			if HITFLOOR then
				if TORSOVELOCITY < 1 and HITFLOOR ~= nil then
					ANIM = "Idle"
					if ATTACKING == false then
						ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0 + 0.05 * COS(SINE / 24)) * ANGLES(RAD(0), RAD(0), RAD(-15)), 0.5 / ANIM_SPEED)
						NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(40), RAD(-10), RAD(0)), 0.15 / ANIM_SPEED)
						RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5 + 0.1 * COS(SINE / 24), 0) * ANGLES(RAD(-45 - 1.5 * SIN(SINE / 24)), RAD(-22.5), RAD(5 + 1.5 * COS(SINE / 24))) * RIGHTSHOULDERC0, 0.5 / ANIM_SPEED)
						GRAB.C0 = Clerp(GRAB.C0, CF(0, -1, 0) * ANGLES(RAD(45), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
						LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-5 - 1.5 * SIN(SINE / 24)), RAD(15), RAD(-10 - 1.5 * COS(SINE / 24))) * LEFTSHOULDERC0, 0.5 / ANIM_SPEED)
						RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1 - 0.05 * COS(SINE / 24), 0) * ANGLES(RAD(0), RAD(70), RAD(0)) * ANGLES(RAD(-3), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
						LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1 - 0.05 * COS(SINE / 24), 0) * ANGLES(RAD(0), RAD(-65), RAD(0)) * ANGLES(RAD(-6), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
						snap = math.random(1,72)
					end
				elseif TORSOVELOCITY > 1 and HITFLOOR ~= nil then
					ANIM = "Walk"
					if ATTACKING == false then
						ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, -0.05) * ANGLES(RAD(HUM.WalkSpeed/2), RAD(0), RAD(15*COS(SINE / WALKSPEEDVALUE))), 0.25 / ANIM_SPEED)
						NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(-HUM.WalkSpeed/2 - 0.5 * SIN(SINE / (WALKSPEEDVALUE / 2))), RAD(0), RAD(-15*COS(SINE / WALKSPEEDVALUE))), 0.25 / ANIM_SPEED)
						RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5 + 0.1 * SIN(SINE / (WALKSPEEDVALUE / 2)), 0) * ANGLES(RAD(-45 - 2 * SIN(SINE / (WALKSPEEDVALUE / 2))), RAD(-10), RAD(5)) * RIGHTSHOULDERC0, 0.5 / ANIM_SPEED)
						GRAB.C0 = Clerp(GRAB.C0, CF(0, -1, 0) * ANGLES(RAD(35+(HUM.WalkSpeed/2)), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
						LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-(8+(ADD*1.25)) * COS(SINE / WALKSPEEDVALUE)), RAD(0), RAD(22 * COS(SINE / (WALKSPEEDVALUE/2)))) * LEFTSHOULDERC0, 0.75 / ANIM_SPEED)
						RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1 , -1, 0) * ANGLES(RAD(0), RAD(90-15*COS(SINE / WALKSPEEDVALUE)), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(-15)), 0.25 / ANIM_SPEED)
						LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-90-15*COS(SINE / WALKSPEEDVALUE)), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(15)), 0.25 / ANIM_SPEED)
					end
				end
			else
				ANIM = "Midair"
				if ATTACKING == false then
					ROOTJOINT.C0 = Clerp(ROOTJOINT.C0, ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(-15), RAD(0), RAD(0)), 1 / ANIM_SPEED)
					NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0 , 0 + ((1) - 1)) * ANGLES(RAD(20), RAD(0), RAD(0)), 1 / ANIM_SPEED)
					RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(-25), RAD(-10), RAD(5)) * RIGHTSHOULDERC0, 0.5 / ANIM_SPEED)
					GRAB.C0 = Clerp(GRAB.C0, CF(0, -1, 0) * ANGLES(RAD(-10), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
					LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0.1) * ANGLES(RAD(35), RAD(-5), RAD(-15)) * LEFTSHOULDERC0, 1 / ANIM_SPEED)
					RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, 0, -1) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(-20)), 1 / ANIM_SPEED)
					LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(10)), 1 / ANIM_SPEED)
				end
			end
		else
			if HITFLOOR then
				if TORSOVELOCITY < 1 and HITFLOOR ~= nil then
					ANIM = "Idle"
					if ATTACKING == false then
						ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0 + 0.05 * COS(SINE / 24)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
						NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(10 - 1.5 * COS(SINE / 24)), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
						RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(-1), RAD(-5), RAD(5)) * RIGHTSHOULDERC0, 0.5 / ANIM_SPEED)
						LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-1), RAD(5), RAD(-5)) * LEFTSHOULDERC0, 0.5 / ANIM_SPEED)
						RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1 - 0.05 * COS(SINE / 24), 0) * ANGLES(RAD(0), RAD(80), RAD(0)) * ANGLES(RAD(-1), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
						LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1 - 0.05 * COS(SINE / 24), 0) * ANGLES(RAD(0), RAD(-80), RAD(0)) * ANGLES(RAD(-1), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
					end
				elseif TORSOVELOCITY > 1 and HITFLOOR ~= nil then
					ANIM = "Walk"
					if ATTACKING == false then
						ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, -0.05) * ANGLES(RAD(HUM.WalkSpeed/2), RAD(0), RAD(15*COS(SINE / WALKSPEEDVALUE))), 0.25 / ANIM_SPEED)
						NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(-HUM.WalkSpeed/2 - 2 * SIN(SINE / (WALKSPEEDVALUE / 2))), RAD(0), RAD(-15*COS(SINE / WALKSPEEDVALUE))), 0.25 / ANIM_SPEED)
						RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD((8+(ADD*1.25)) * COS(SINE / WALKSPEEDVALUE)), RAD(0), RAD(-22 * COS(SINE / (WALKSPEEDVALUE/2)))) * RIGHTSHOULDERC0, 0.75 / ANIM_SPEED)
						LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-(8+(ADD*1.25)) * COS(SINE / WALKSPEEDVALUE)), RAD(0), RAD(22 * COS(SINE / (WALKSPEEDVALUE/2)))) * LEFTSHOULDERC0, 0.75 / ANIM_SPEED)
						RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1 , -1, 0) * ANGLES(RAD(0), RAD(90-15*COS(SINE / WALKSPEEDVALUE)), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(-15)), 0.25 / ANIM_SPEED)
						LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-90-15*COS(SINE / WALKSPEEDVALUE)), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(15)), 0.25 / ANIM_SPEED)
					end
				end
			else
				ANIM = "Midair"
				if ATTACKING == false then
					ROOTJOINT.C0 = Clerp(ROOTJOINT.C0, ROOTC0 * CF(0, 0, 0 ) * ANGLES(RAD(-15), RAD(0), RAD(0)), 1 / ANIM_SPEED)
					NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0 , 0 + ((1) - 1)) * ANGLES(RAD(20), RAD(0), RAD(0)), 1 / ANIM_SPEED)
					RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0.1) * ANGLES(RAD(45), RAD(5), RAD(15)) * RIGHTSHOULDERC0, 1 / ANIM_SPEED)
					LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0.1) * ANGLES(RAD(35), RAD(-5), RAD(-15)) * LEFTSHOULDERC0, 1 / ANIM_SPEED)
					RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, 0, -1) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(-20)), 1 / ANIM_SPEED)
					LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(10)), 1 / ANIM_SPEED)
				end
			end
		end
	else
		ANIM = "Sit"
		if ATTACKING == false then
			ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, -0.5) * ANGLES(RAD(0), RAD(0), RAD(0)), 1.25 / ANIM_SPEED)
			NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1.25 / ANIM_SPEED)
			if DISGUISED == true then
				RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.65, 0) * ANGLES(RAD(50), RAD(10), RAD(-45))*CF(0,-0.25,0) * RIGHTSHOULDERC0, 1.25 / ANIM_SPEED)
			else
				RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(-25), RAD(-10), RAD(5)) * RIGHTSHOULDERC0, 0.5 / ANIM_SPEED)
				GRAB.C0 = Clerp(GRAB.C0, CF(0, -1, 0) * ANGLES(RAD(40), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
			end
			LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.65, 0) * ANGLES(RAD(50), RAD(-10), RAD(45))*CF(0,-0.25,0) * LEFTSHOULDERC0, 1.25 / ANIM_SPEED)
			RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -0.25, -1) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(10)), 1.25 / ANIM_SPEED)
			LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -0.25, -1) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(-10)), 1.25 / ANIM_SPEED)
		end
	end
end